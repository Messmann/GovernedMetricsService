<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>Qlik Metric Library</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
      <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
	<script>

	$(document).ready(function()
	{
        
		$.get("http://localhost:8185/read", function(data, status)
		{
        	//alert("Data: " + JSON.parse(data1) + "\nStatus: " + status);
			
            //alert(JSON.stringify(data1));
            //data = JSON.parse(data1);
            //alert(data1.length);
            //data = JSON.parse(data1);
            //alert(data.length);
            //alert(data[0].MetricName);

            //alert("Data2: " + data );

			var tabledata = "";
			
			for(var i = 0; i < data.length; i++)
			{
				var row = data[i];
				var tr = document.createElement("tr");

				//for(var j = 0; j < row.length; j++)
				//{
					var td = document.createElement("td"); td.innerHTML = row.ID; tr.appendChild(td);
                    var td = document.createElement("td"); td.innerHTML = row.MetricSubject; tr.appendChild(td);
                    var td = document.createElement("td"); td.innerHTML = row.MetricType; tr.appendChild(td);
                    var td = document.createElement("td"); td.innerHTML = row.MetricName; tr.appendChild(td);
                    var td = document.createElement("td"); td.innerHTML = row.MetricFormula; tr.appendChild(td);
                    var td = document.createElement("td"); td.innerHTML = row.MetricDescription; tr.appendChild(td);
                    var td = document.createElement("td"); td.innerHTML = row.MetricOwner; tr.appendChild(td);
                    var td = document.createElement("td"); td.innerHTML = row.MetricTags; tr.appendChild(td);
                    //var td = document.createElement("td"); td.innerHTML = row[j]; tr.appendChild(td);
				//}
				$('#tabledata').append(tr);
			}
		});
		
		
        $(document).click(function (e) {
                
                revert();
        });

        function revert() {
            
            $("#tabledata .editfield").each(function () {
                var $td = $(this).closest('td');
                $td.empty();
                $td.text($td.data('oldText'));
                $td.data('editing', false);

                console.log('Edit canceled.');
            });
        };


        //$("#tabledata td").click(function (e) {
        $("#tabledata").delegate('td', 'click', function(e){

            //alert("sss");
            // consuem event
            e.preventDefault();
            e.stopImmediatePropagation();

            $td = $(this);

            //alert($td);

            // if already editing, do nothing.
            if ($td.data('editing')) return;
            // mark as editing
            $td.data('editing', true);

            // get old text
            var txt = $td.text();

            // store old text
            $td.data('oldText', txt);

            // make input
            var $input = $('<input type="text" class="editfield">');
            $input.val(txt);

            // clean td and add the input
            $td.empty();
            $td.append($input);
        });

        
    

        function save($input) {
            var val = $input.val();
                var $td = $input.closest('td');
                $td.empty();
                $td.text(val);
                $td.data('editing', false);

                // send json or whatever
                //alert("asdf");
                //var cell = $(this).closest('td');
                //var cellIndex = cell[0].cellIndex;

                //var row = cell.closest('tr');
                //var rowIndex = row[0].rowIndex;


                var o = {};
                //o.row = $td.closest('tr').find(":first-child");
                o.row = $td.siblings(":first").text();
                o.col = $td[0].cellIndex;
                o.value = val;

//                alert(o.row);

                $.post("http://localhost:8185/cell", o);
                
                // Do something with the result
                console.log('Value changed');    
        };

        //$('#tabledata td').on('keyup', 'input.editfield', function (e) {
        $("#tabledata").delegate('td', 'keyup', 'input.editfield', function (e) {
            //alert("s1122");
           if (e.which == 13) {
                // save
                $input = $(e.target);
                save($input);
            } else if (e.which == 27) {
                // revert
                revert();
            }
        });

         
    });
  
    
    function adddata()
    {
        var tr = document.createElement("tr");
        var td = null;

        td = document.createElement("td"); td.innerHTML = "*new*"; tr.appendChild(td);
        for(var j = 1; j < 8; j++)
        {
             td = document.createElement("td"); td.innerHTML = "ChangeMe"; tr.appendChild(td);
        }
        $('#tabledata').append(tr);

        var o = {};
        //o.row = $td.closest('tr')[0].rowIndex;
        //o.col = $td[0].cellIndex;
        //o.value = val;

        $.post("http://localhost:8185/addrow", o);

    };

    function updateMasterLib()
    {
        $.post("http://localhost:8590/masterlib/reload", function(result,strStatus,xhr)
            {
                alert(xhr.status + "|" + strStatus+ "|" + result);
                if(xhr.status==200)
                {
                     $.post("http://localhost:8590/masterlib/update/all", function(result,strStatus,xhr)
                     {
                        alert('Completed updating metrics in apps');
                     });
                }
            });
//        alert("Master Libraries Updating!...");
    };

    function deletedata()
    {
        var deleteID = window.prompt("ID to delete:", "");
        if(deleteID)
        {
            var o = {};
                //o.row = $td.closest('tr').find(":first-child");
                o.row = deleteID;
                //o.col = $td[0].cellIndex;
                //o.value = val;

                //alert(o.row);

            $.post("http://localhost:8185/deleterow", o);

            //$("#tabledata tr td:first").filter(function(){return $(this).text() === deleteID}).parent().empty();

        }

    }

    function savedata()
    {
        /*var resultArray = [];

        $("#tabledata tr").each(function(){
                    var innerArray = [];

            //alert("Here");

            $(this).find('td').each(function () {

                //console.log($(this).text());

                innerArray.push($(this).text());
            });

            resultArray.push(innerArray);
        });*/

        /*var tbl = $('#tabledata tr').get().map(function(row) {
          return $(row).find('td').get().map(function(cell) {
            return $(cell).html();
          });
        });

        //console.log(resultArray);
        var json = JSON.stringify(tbl);
        console.log(json);*/

        
        $.get("http://localhost:8185/save", function(data, status)
        {
            //alert("Data: " + data + "\nStatus: " + status);
            //alert(data.length);
            /*var tabledata = "";
            
            for(var i = 0; i < data.length; i++)
            {
                var row = data[i];
                var tr = document.createElement("tr");

                for(var j = 0; j < row.length; j++)
                {
                    var td = document.createElement("td"); td.innerHTML = row[j]; tr.appendChild(td);
                }
                $('#tabledata').append(tr);
            }*/
        });

    };
  
</script>
	
</head>
<body>
<def>

<style>
    @font-face {
    	font-family: 'QlikView Sans';
    	src: url(/resource/font/#QlikViewSansRegular) format('svg');
        font-weight: normal;
	    font-style: normal;
    }
		
    body
    {
		margin-left: 200px;
		margin-top: 100px;
		width: 960px;
		height: 768px;
       /* font-family: 'QlikView Sans'; */
       /* font-size: 1.0em; */
        background-image: url('/resource/qv');
		background-size: 220px, 400px;
        background-repeat:no-repeat, no-repeat;
        background-position: 0px 0px, 700px 500px;
		background-attachment: fixed, fixed;
    }
	    
    #tableheader 
    {
        color: #FFFFFF;
        background-color: #62AC1E;
        line-height: 2;
    }

/*    td
    {
        font-family: 'Courier';
        font-size: 12px;
    } */
	
	#table-wrapper {
  position:relative;
}
#table-scroll {
  height:500px;
  overflow:auto;  
  margin-top:20px;
  
  margin: 0 auto;
}
#table-wrapper table {
  width:100%;

}
/*#table-wrapper table * {
  background:yellow;
  color:black;
}*/

#table-wrapper table thead th .text {
  position:absolute;   
  top:-20px;
  z-index:2;
  height:20px;
  width:35%;
  border:1px solid red;

}
	
</style>
</def>

    <h1 style='color: #5F6062; font-size: 23pt; font-weight: bold; font-family: Arial;'>Metric Library Editor</h1>

    <!--div id="table-wrapper" border="1px"-->
    <div id="table-scroll">
	<table id="tabledata" class="table table-bordered table-striped" >
        <tr id="tableheader">
            <td>MetricID</td>
			<td>MetricSubject</td>
			<td>MetricType</td>
			<td>MetricName</td>
			<td>MetricFormula</td>
			<td>MetricDescription</td>
			<td>MetricOwner</td>
			<td>MetricTags</td>
        </tr>
    </table>
    </div>
    <!--/div-->

    <br>
    <button class="btn btn-primary" onclick="adddata()">Add Metric</button>
    <button class="btn btn-warning" onclick="deletedata()">Delete Metric</button>
    <button class="btn btn-info" onclick="alert('For demo purposes only.  This editor provides an interface to create an edit metrics outside of Qlik that would subsequently be read in by other processes.')">About</button>
    <button class="btn btn-success" onclick="updateMasterLib()">Update Master Libraries</button>    


	
</body>
</html>
		